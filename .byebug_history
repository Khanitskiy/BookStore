continue
result_regular = string.match(regular_expression)
regular_expression = Regexp.new(params[:value], Regexp::IGNORECASE)
continue
string.sub(Regexp.new(params[:value], Regexp::IGNORECASE), "<span style='color: yellow'>#{params[:value]}</span>").html_safe
Regexp.new(string, Regexp::IGNORECASE)
string.sub(Regexp.new(params[:value], Regexp::IGNORECASE), "<span style='color: yellow'>#{params[:value]}</span>").html_safe
string.sub(Regexp.new(params[value], Regexp::IGNORECASE), "<span style='color: yellow'>#{params[:value]}</span>").html_safe
search = Regexp.new(string, Regexp::IGNORECASE)
Regexp.escape(string)
search = Regexp.new(Regexp.escape(string), Regexp::IGNORECASE)
search = Regexp.new(Regexp.escape(params, Regexp::IGNORECASE)
search = Regexp.new(Regexp.escape(params[:value]), Regexp::IGNORECASE)
search = Regexp.new(Regexp.escape(string, Regexp::IGNORECASE))
search = Regexp.new(Regexp.escape(string, Regexp::IGNORECASE)
string
string.sub(params[:value], "<span style='color: yellow'>#{params[:value]}</span>").html_safe
search = Regexp.new(Regexp.escape(string, Regexp::IGNORECASE)
search = Regexp.new(Regexp.escape(params[:value]), Regexp::IGNORECASE)
continue
params
params[:value]
@books
continue
super(resource)
@user
continue
@user
user.sign_in_count
user
continue
    book_id: book.first[3..-1].to_i, 
OrderItem.create!( order_id: order_id, 
@order_item.nil?
@order_item = OrderItem.where(order_id: order_id, book_id: book.first[3..-1].to_i).first
order_id
book.first[3..-1].to_i
book.first[3..-1].ti_i
book.first[3..-1]
book.first
@order_item = OrderItem.where(order_id: order_id, book_id: book.first[3..-1].to_
continue
@order_item = OrderItem.where(order_id: order_id, book_id: book.first[3..-1].to_i).first
@order_item = OrderItem.where(order_id: order_id, book_id: book.first[3..-1].to_i)
book.first == "book_count" || book.first == "total_price"
unless book.first == "book_count" || book.first == "total_price"
continue
@order_item.nil?
@order_item
@order_item = OrderItem.where(order_id: order_id, book_id: book.first[3..-1].to_i)
continue
book.first == "book_count"
continue
book
continue
@cookies_book["book_count"]
@cookies_book[:book_count]
@cookies_book
cookies["book_count"]
continue
 cookies["book_count"].to_i
continue
 session[:omniauth_login_locale] || I18n.default_locale
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale] == params[:locale] && params[:locale] == nil
params[:locale] == nil
session[:omniauth_login_locale] == params[:locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale] == params[:locale]
 params[:locale] != nil
session[:omniauth_login_locale] == params[:locale] && params[:locale] != nil
session[:omniauth_login_locale]
params[:locale]
continue
params[:locale]
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
session[:omniauth_login_locale]
continue
I18n.locale
continue
I18n.locale
continue
I18n.locale
session[:omniauth_login_locale]
I18n.locale = session[:omniauth_login_locale] || I18n.default_local
continue
@user
@user.persisted?
continue
@user
continue
defined?(@order)
@order = 'sss'
@order = sss
defined?(@order)
defined?("щквук)
@order.defined?
@order.empty?
@order.empty
@order
continue
@order
continue
@order
continue
q
@order
continue
a= step
continue
order
order.order_total.to_f
order
order.cupon
continue
@order.cupon.nil?
@order.cupon
@order.cupon.nil?
continue
@order.cupon.discount.to_s
@order.cupon.discount.to_i
continue
order_total - @order.cupon.discount
order_total
order-total
@order.cupon.discount
 @order.cupon.use == false
@order.cupon.nil?
unless @order.cupon.nil? && @order.cupon.use == false
continue
cupon
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params[:value]
continue
@order.id
cupon
cupon = Cupon.cheking(params[:value])
params[:value]
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
local
reques[env]
request[env]
requer['env']
continue
params
continue
params
continue
params
continue
params
continue
params
continue
 "Your discount is $" << checking.discount.to_s << ". Continue?"
continue
checking.use ? 'This code has been used' : 'Your discount is $' + checking.discount.to_s + '. Continue?'
continue
checking.use ? 'This code has been used' : 'Your discount is ' + checking.discount.to_s + '$. Continue?'
checking
continue
checking.use ? 'This code has been used' : 'Your discount is' + checking.discount.to_s + '$. Continue?'
checking.use ? 'This code has been used' : 'Your discount is' + checking.discount + '$. Continue?'
continue
checking.first
checking
checking == true
checking
if checking
checking
continue
a.use
a
a.to_b
a.t_bool
a.to_bool
a.to_b
a.boolean?
a.bool?
a.blank?
a
a =  where(value: params).first
 where(value: params).first
 where(value: params).first.blank?
 where(value: params).first.empty?
 where(value: params).first
continue
 where(value: 'asdasdasd').first
 where(value: params).first
continue
 where(value: params).first
 where(value: params)
continue
params
continue
