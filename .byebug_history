continue
current_user.order
current_user.orders
current_user.orders.where(state: 'in_progress').first
current_user.orders
current_user
current_user.orders.first
current_user.orders
current_user.order
current_user.orders.where(state: 'in_progress').first
current_user
@order
continue
@order.order_items.create(order_params)
order.order_items.create(order_params)
order_items.id
order_items
щквук_шеуьы
continue
order_items
continue
order_items
order_items.update(order_params)
params[:quantity] = params[:quantity].to_i + order_items[:quantity].to_i
 order_items
continue
item.book
item
continue
@order_steps_form.order_items
@order_steps_form
continue
@order.order_items
continue
@order.order_items
@obj
@obj = value ? @order.order_items : cookies_json_parse(:books)
continue
@order = Order.find_by_id(15)
@order = Order.finde_by_id(15)
@order
@order.
@order.order_items.all
@order.order_items
@order
@obj = value ? @order.order_items : cookies_json_parse(:books)
@order
@order.order_items.all
@order.order_items
Book.where(id: parse_ids(@obj, value))
continue
@books
continue
cotninue
@order_item
continue
@order
continue
user_id
total_price
cookies
continue
@books
continue
@order_steps_form
continue
@order_steps_form
continue
@order_steps_form
continue
@order_steps_form
continue
@order_steps_form
continue
current_user
continue
current_user
continue
current_user
continue
all_checkout_params[1]
all_checkout_params[0]
all_checkout_params
continue
variable
continue
hash[@order.step_number.to_i]
continue
 @order.step_number.to_i
continue
a = step
 @order.step_number.to_i
continue
a = step
continue
a = step
continue
a = step
continue
a = step
continue
a = step
hash[step]
@order.step_number.to_i
continue
hash[step]
hash = { address: 0, delivery: 1, payment: 2, confirm: 3, complete: 4 }
hash
hash[step]
@order.step_number.to_i == hash[step]
continue
'c_active' if params[:id] == path
path
continue
params[:id]
path
continue
a = step
continue
a = step
continue
a = step
continue
@order.step_number
@order_step_number
continue
@order.step_number
steps[@order.step_number]
continue
hash[step]
 hash[step]
continue
@order.step_number
hash[step]
continue
@order.step_number
@order.step)number
hash[step]
continue
hash[step]
hash[1]
hash
continue
sptes[0]
steps
@order.step_number
steps[++@order.step_number]
continue
@last_step
a = step
continue
a = step
step
@last_step
continue
last_stepcontinur
last_step
continue
@last_step
continue
@last_step
continue
@last_step
continue
@last_step
continue
last_step
continue
@last_step
continue
@in_queue.all.empty?сщтештгу
@in_queue.all.empty?
@in_queue.all
continue
status
continue
a.all.empty?
a.all.empty
a.all
a.first.all
a.first
a
a = @in_queue
@in_queue
status
continue
ontinue
сщтештгу
status
continue
@title
title
continue
@in_queue
status
@status
continue
a
a = @in_queue
@in_queue
continue
@status
continue
status
continue
@status
continue
OrderUpdate.new(@order, session, calc_price).call
continue
OrderUpdate.new(@order, session, calc_price).call
continue
@order = current_user.orders.where(state: 'in_progress').first
continue
@subtotal.to_f
@subtotal
continue
current_user.id
continue
current_user.id
continue
order_id
continue
@order
continue
@order
continue
@order.id
@order
continue
a = @order.order_items.all
continue
a = @order.order_items.all
@order.order_items.all
@order.order_items
@order_items
@order.order_items
@order.order_item
@order
@order.order_items
@obj
continue
@books
continue
@books
continue
@books
continue
@books
continue
@order_item.update(quantity: book.second.to_i + @order_item.quantity)
@order_item.nil?
@order_item
book
 OrderItem.where(order_id: order_id, book_id: book.first.to_i).first
continue
book
